import { join } from './path.js';
const types = ['peerDependencies', 'devDependencies', 'optionalDependencies', 'dependencies'];
export function createWorkspaceGraph(cwd, wsNames, wsPkgNames, byPkgName, byName) {
    const graph = {};
    const getWorkspaceDirs = (pkg) => {
        const dirs = new Set();
        for (const type of types) {
            if (pkg.manifest[type]) {
                for (const pkgName in pkg.manifest[type]) {
                    if (wsPkgNames.has(pkgName)) {
                        const workspace = byPkgName.get(pkgName);
                        if (workspace)
                            dirs.add(workspace.dir);
                    }
                }
            }
        }
        return dirs;
    };
    for (const name of wsNames) {
        const pkg = byName.get(name);
        if (pkg)
            graph[join(cwd, name)] = getWorkspaceDirs(pkg);
    }
    return graph;
}
